/**
 * Gradle application configuration file.
 * Chris Joakim, Microsoft, January 2022
 */

plugins {
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.mongodb:mongodb-driver-sync:4.1.1'
    implementation 'org.slf4j:slf4j-api:1.7.33'
    //implementation 'org.slf4j:slf4j-simple:1.7.33'   <-- uncomment for verbose Mongo Driver logging
    implementation 'com.google.guava:guava:30.1.1-jre'

    testImplementation 'junit:junit:4.13.2'
}

application {
    // Define the main class for the application.
    mainClass = 'org.cjoakim.cosmos.mongo.App'
}

test {
    useJUnit()
    maxHeapSize = '1G'
    testLogging {
        events "PASSED", "SKIPPED", "FAILED"
    }
}

// $ gradle displayAppConfig
task displayAppConfig(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.cjoakim.cosmos.mongo.App'
    args 'app_config'
}

// $ gradle findByPk
task findByPk(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.cjoakim.cosmos.mongo.App'
    args 'find_by_pk', 'demo', 'stores', '2', '--verbose'
}

// $ gradle findByIdPk
task findByIdPk(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.cjoakim.cosmos.mongo.App'
    args 'find_by_id_pk', 'demo', 'stores', '61e6d8407a0af4624aaf0212', '2', '--verbose'
}

tasks.register('uberJar', Jar) {
    archiveClassifier = 'uber'
    duplicatesStrategy = 'include'
    manifest {
        attributes 'Main-Class': "org.cjoakim.cosmos.mongo.App"
    }
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

